#####################################################################
#    Macros
#####################################################################
[gcode_macro _SERVO_OUT] #Debug Deploy Arm
gcode:
  ##### Get user defines #####
    {% set z_min = printer['gcode_macro _USER_VARIABLE'].probe_z_min|float %}
  ##### get toolhead position #####
    {% set act_z = printer.toolhead.position.z|float %}
  ##### end of definitions #####
    {% if "xyz" not in printer.toolhead.homed_axes %}
      G28 RESET_SETTINGS={ params.RESET_SETTINGS|default('true') }
    {% endif %}
    {% if act_z < z_min %}
      G0 Z{z_min} F1500                   ; move bed down
    {% endif %}
    SET_SERVO SERVO=SideSwipe ANGLE=90

[gcode_macro _SERVO_IN] #Debug Retract Arm
gcode:
    SET_SERVO SERVO=SideSwipe ANGLE=0
    SET_SERVO SERVO=SideSwipe WIDTH=0

[gcode_macro ATTACH_PROBE]
description: Attaching the MagProbe if not already attached
gcode:
  M118 Attach Probe
  M400
  _MAG_PROBE ACTION=ATTACH
  M118 Check Probe Attached
  M400
  _MAG_PROBE ACTION=CHECK_ATTACH

[gcode_macro DETACH_PROBE]
description: Dock the MagProbe if not already docked
gcode:
  M118 Probe docking
  M400
  _MAG_PROBE ACTION=DOCK
  M118 Docking check
  M400
  QUERY_PROBE
  G4 P500
  _MAG_PROBE ACTION=CHECK_DOCK
   
[gcode_macro GET_PROBE_STATUS]
description: Prints the current MagProbe state, valid probe states are UNKNOWN, ATTACHED and DOCKED
gcode:
  _MAG_PROBE ACTION=GET_STATUS RESPOND=1
  

[gcode_macro SET_PROBE_STATUS]
description: Manually specify MagProbe status, valid probe states are UNKNOWN, ATTACHED and DOCKED
variable_state: 'unknown'
gcode:
  {% if 'STATE' in params|upper and 
        (params.STATE|lower == 'unknown' or params.STATE|lower == 'attached' or params.STATE|lower == 'docked') %}
    SET_GCODE_VARIABLE MACRO=SET_PROBE_STATUS VARIABLE=state VALUE='"{params.STATE|lower}"'
    SET_GCODE_VARIABLE MACRO=_MAG_PROBE VARIABLE=state VALUE='"{params.STATE|lower}"'
  {% else %}
    {% set state = params.STATE|default('none') %}
    {action_raise_error("Invalid probe state: %s. Valid probe states are [UNKNOWN, ATTACHED, DOCKED]" % state|upper)}
  {% endif %}
   
