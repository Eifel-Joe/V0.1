############### Config options ##################

[gcode_macro _bedfanvars]
variable_threshold: 100		# If bed temp target is above this threshold, fans will be enabled. If temp is set to below this threshold, fans will be disabled.
variable_fast: 1.0		# Fan speed once bed temp is reached
variable_slow: 0.5		# Fan speed while bed is heating
variable_maxtemp: 60
variable_reducetemp: 55
variable_mintemp: 50
gcode:

########## Aliases #########

[gcode_macro NMSlow]
gcode:
	# Vars
	{% set SLOW = printer["gcode_macro _bedfanvars"].slow|float %}
	
	SET_FAN_SPEED FAN=Nevermore SPEED={SLOW}

[gcode_macro NMFast]
gcode:
	# Vars
	{% set FAST = printer["gcode_macro _bedfanvars"].fast|float %}
	
	SET_FAN_SPEED FAN=Nevermore SPEED={FAST}

[gcode_macro NMOff]
gcode:
  M118 Nevermore aus
  SET_FAN_SPEED FAN=Nevermore SPEED=0

################ Monitoring loop #####################

# Turns bed fans to "fast" speed once target bed temp is reached.
[delayed_gcode NMloop]
gcode:
	# Vars
	{% set THRESHOLD = printer["gcode_macro _bedfanvars"].threshold|int %}
	
	{% if printer.heater_bed.target >= THRESHOLD %}								# Continue only if target temp greater than threshold.
		{% if printer.heater_bed.temperature|int >= (printer.heater_bed.target|int - 1) %}
			NMFast															# If within 1 degree of target temp: Higher speed fans
		{% else %}
			UPDATE_DELAYED_GCODE ID=NMloop DURATION=5						# If temp not reached yet: loop again
		{% endif %}
	{% endif %}

[delayed_gcode prevent_overheat]
#initial_duration: 5.
gcode:
    {% set THRESHOLD = printer["gcode_macro _bedfanvars"].threshold|int %}
    {% set MAXTEMP = printer["gcode_macro _bedfanvars"].maxtemp|int %}
    {% set REDUCETEMP = printer["gcode_macro _bedfanvars"].reducetemp|int %}
    {% set MINTEMP = printer["gcode_macro _bedfanvars"].mintemp|int %}

    {% if printer.idle_timeout.state == "Printing" and printer.heater_bed.temperature >= THRESHOLD %} 
      {% if printer["temperature_sensor Chamber"].temperature >= MAXTEMP %}
      NMOFF
      {% elif printer["temperature_sensor Chamber"].temperature >= REDUCETEMP and printer["temperature_sensor Chamber"].temperature < MAXTEMP %}
      NMSLOW
      {% elif printer["temperature_sensor Chamber"].temperature < MINTEMP %}
      NMFAST
      {% endif %}
    {% endif %}
    UPDATE_DELAYED_GCODE ID=prevent_overheat Duration=5

    
    